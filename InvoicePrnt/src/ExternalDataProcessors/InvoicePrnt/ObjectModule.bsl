#Область ПрограммныйИнтерфейс
Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.РеализацияТоваровУслуг"); //Указываем документ к которому делаем внешнюю печ. форму
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Печать инвойса"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.0"); 
	ПараметрыРегистрации.Вставить("Информация", "Печать конечных инвойсов "); 
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Печать конечных инвойсов", "ProformaInvoice", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
КонецФункции




Функция ПолучитьТаблицуКоманд()
Команды = Новый ТаблицаЗначений;
Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

НоваяКоманда = ТаблицаКоманд.Добавить();
НоваяКоманда.Представление = Представление; 
НоваяКоманда.Идентификатор = Идентификатор;
НоваяКоманда.Использование = Использование;
НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры
#КонецОбласти

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ProformaInvoice", "Печать конечных инвойсов", СформироватьПечатнуюФорму(МассивОбъектов[0], ОбъектыПечати));

КонецПроцедуры // Печать()


Функция СформироватьПечатнуюФорму(СсылкаНаДокумент, ОбъектыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетНаОплатуВРТУ";
	
	МакетОбработки = ПолучитьМакет("Инвойс");
	
	//заполняем шапку
	ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.НомИнвойса = СсылкаНаДокумент.Комментарий;
	ОбластьШапка.Параметры.ДатИнвойса = СсылкаНаДокумент.Дата;
	ОбластьШапка.Параметры.НомДоговора = СсылкаНаДокумент.ДоговорКонтрагента.НомерДоговора;
	ОбластьШапка.Параметры.ДатДоговора = СсылкаНаДокумент.ДоговорКонтрагента.ДатаДоговора;
	ОбластьШапка.Параметры.Покупатель = СсылкаНаДокумент.Контрагент.НаименованиеПолное;
	ОбластьШапка.Параметры.ЮрАдрес = ПолучитьАдресКонтрагента(СсылкаНаДокумент.Контрагент,Перечисления.ТипыКонтактнойИнформации.Адрес,Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	ОбластьШапка.Параметры.Банк = СсылкаНаДокумент.Контрагент.ОсновнойБанковскийСчет.Банк;
	ОбластьШапка.Параметры.Бик = СсылкаНаДокумент.Контрагент.ОсновнойБанковскийСчет.Банк.Код;
	ОбластьШапка.Параметры.РасчСчет = СсылкаНаДокумент.Контрагент.ОсновнойБанковскийСчет.НомерСчета;
	ОбластьШапка.Параметры.Телефон = ПолучитьАдресКонтрагента(СсылкаНаДокумент.Контрагент,Перечисления.ТипыКонтактнойИнформации.Телефон,Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
	ОбластьШапка.Параметры.Факс = ПолучитьАдресКонтрагента(СсылкаНаДокумент.Контрагент,Перечисления.ТипыКонтактнойИнформации.Факс,Справочники.ВидыКонтактнойИнформации.ФаксКонтрагента);
	ОбластьШапка.Параметры.ЭлПочта = ПолучитьАдресКонтрагента(СсылкаНаДокумент.Контрагент,Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,Справочники.ВидыКонтактнойИнформации.EmailКонтрагента);
	//выводим шапку в табличный документ
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	//заполняем строки ТЧ
	ОбластьСтроки = МакетОбработки.ПолучитьОбласть("СтрокаТЧ");
	
	Для Каждого ТекущаяСтрока Из СсылкаНаДокумент.Товары Цикл
		ЗаполнитьЗначенияСвойств(ОбластьСтроки.Параметры, ТекущаяСтрока);
		ТабличныйДокумент.Вывести(ОбластьСтроки);
	КонецЦикла;
	
	//заполняем итог
	ОбластьИтог = МакетОбработки.ПолучитьОбласть("Итог");
	ОбластьИтог.Параметры.ИтСумма = СсылкаНаДокумент.Товары.Итог("Сумма");
	ТабличныйДокумент.Вывести(ОбластьИтог);
	
	
	//заполняем подвал
	ОбластьПодвал = МакетОбработки.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.Итог = СсылкаНаДокумент.Товары.Итог("Сумма");
	ОбластьПодвал.Параметры.Вал = СсылкаНаДокумент.ВалютаДокумента;
	ОбластьПодвал.Параметры.ИтПрописью = БухгалтерскийУчетСервер.СформироватьСуммуПрописью(СсылкаНаДокумент.Товары.Итог("Сумма"), СсылкаНаДокумент.ВалютаДокумента);
	ОбластьПодвал.Параметры.Поставка = "DAP Minsk";
	ОбластьПодвал.Параметры.Оплата = "prepaid/предоплата - 100%";
	ОбластьПодвал.Параметры.Цель = "для коммерческих целей/ for commercial purposes.";
	ОбластьПодвал.Параметры.Грузополуч = СсылкаНаДокумент.Контрагент;
	ОбластьПодвал.Параметры.АдресПолуч = ПолучитьАдресКонтрагента(СсылкаНаДокумент.Контрагент,Перечисления.ТипыКонтактнойИнформации.Адрес,Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	//выводим подвал в табличный документ
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции


Функция ПолучитьАдресКонтрагента(Ссылка,Тип,Вид)
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КонтрагентыКонтактнаяИнформация.Представление
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
		|	И КонтрагентыКонтактнаяИнформация.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И КонтрагентыКонтактнаяИнформация.Тип = &Тип
		|	И КонтрагентыКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Тип", Тип);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Вид", Вид);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 1 Тогда
		Сеп = ";"
	Иначе
		Сеп = "";
	КонецЕсли;
	
	Представл = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Представл = Представл + ВыборкаДетальныеЗаписи.Представление + Сеп;
	КонецЦикла;
	
	Возврат Представл;
КонецФункции

	
	